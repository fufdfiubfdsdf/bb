import os
from dataclasses import dataclass
from typing import Dict

@dataclass
class BotConfig:
    token: str
    yoomoney_wallet: str
    notification_secret: str
    private_channel_id: int
    price: float
    description: str

def load_bot_configs() -> Dict[str, BotConfig]:
    """–ó–∞–≥—Ä—É–∑–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–π –±–æ—Ç–æ–≤ –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–ª–∏ —Ñ–∞–π–ª–∞."""
    bots = {}
    # –ü—Ä–∏–º–µ—Ä: –∑–∞–≥—Ä—É–∑–∫–∞ –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
    for i in range(1, 15):  # –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º –¥–æ 14 –±–æ—Ç–æ–≤
        prefix = f"BOT_{i}_"
        token = os.getenv(f"{prefix}TOKEN")
        if not token:
            continue
        bots[f"bot{i}"] = BotConfig(
            token=token,
            yoomoney_wallet=os.getenv(f"{prefix}YOOMONEY_WALLET", "4100118178122985"),
            notification_secret=os.getenv(f"{prefix}NOTIFICATION_SECRET", "CoqQlgE3E5cTzyAKY1LSiLU1"),
            private_channel_id=int(os.getenv(f"{prefix}PRIVATE_CHANNEL_ID", "-1002640947060")),
            price=float(os.getenv(f"{prefix}PRICE", "600.00")),
            description=os.getenv(f"{prefix}DESCRIPTION", (
                "–¢–∞—Ä–∏—Ñ: –°—Ç–∞–Ω–¥–∞—Ä—Ç\n"
                "–°—Ç–æ–∏–º–æ—Å—Ç—å: {price} üá∑üá∫RUB\n"
                "–°—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è: 1 –º–µ—Å—è—Ü\n\n"
                "–î–æ—Å—Ç—É–ø –∫ –∑–∞–∫—Ä—ã—Ç–æ–º—É –∫–∞–Ω–∞–ª—É"
            ))
        )
    return bots
